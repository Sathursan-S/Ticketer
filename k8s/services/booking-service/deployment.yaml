apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookingservice
  labels:
    app: bookingservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookingservice
  template:
    metadata:
      labels:
        app: bookingservice
    spec:
      initContainers:
        - name: check-jaeger
          image: busybox:1.28
          command: ['sh', '-c', 'until nslookup jaeger; do echo waiting for jaeger; sleep 2; done;']
      containers:
        - name: bookingservice
          image: ticketer/booking-service:latest
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Development"
            - name: ASPNETCORE_URLS
              value: "http://+:80"
            - name: ASPNETCORE_HTTP_PORTS
              value: "80"
            - name: RabbitMq__Host
              value: "rabbitmq"
            - name: RabbitMq__Username
              value: "guest"
            - name: RabbitMq__Password
              value: "guest"
            - name: RabbitMq__VirtualHost
              value: "/"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: booking-db-password
            - name: ConnectionStrings__PostgresSQL
              value: "Host=booking-db;Port=5432;Database=BookingServiceDb;Username=postgres;Password=$(POSTGRES_PASSWORD)"
            # OpenTelemetry configuration
            - name: OpenTelemetry__ServiceName
              value: "BookingService"
            - name: OpenTelemetry__ServiceVersion
              value: "1.0.0"
            - name: OpenTelemetry__Jaeger__Endpoint
              value: "jaeger:6831"
            - name: OpenTelemetry__Otlp__Endpoint
              value: "http://otel-collector:4317"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5


          # Uncomment and configure if you have persistent storage
          # volumeMounts:
          #   - name: booking-db-data
          #     mountPath: /path/in/container
      # volumes:
      #   - name: booking-db-data
      #     persistentVolumeClaim:
      #       claimName: booking-db-pvc